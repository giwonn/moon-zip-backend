# docker compose -f docker-compose.dev.yml up --build --force-recreate
# docker compose -f docker-compose.dev.yml down -v  --rmi local --remove-orphans --timeout 0
version: '0.1'

services:
  nginx:
    image: nginx:latest
    ports:
      - "8010:80"
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf
    environment:
      - TZ=Asia/Seoul
    restart: always
  server:
    image: moon-zip-backend
    build:
      context: .
      dockerfile: ./Dockerfile.dev
      target: development
    command: npm run ${cmd:-start:dev}
    restart: always
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - TZ=Asia/Seoul
    depends_on:
      - db
      - redis-jwt
      - redis-cache
  db:
    image: postgres:15-alpine
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - TZ=Asia/Seoul
  redis-jwt:
    image: redis:latest
    environment:
      - REDIS_PASSWORD=${REDIS_JWT_PASSWORD}
      - TZ=Asia/Seoul
    command: ["redis-server", "--requirepass", "${REDIS_JWT_PASSWORD}"]
  redis-cache:
    image: redis:latest
    environment:
      - REDIS_PASSWORD=${REDIS_CACHE_PASSWORD}
      - TZ=Asia/Seoul
    command: ["redis-server", "--requirepass", "${REDIS_CACHE_PASSWORD}"]
